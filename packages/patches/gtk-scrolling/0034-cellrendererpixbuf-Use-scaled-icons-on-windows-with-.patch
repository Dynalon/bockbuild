From a5a6e72246729ec88255d716912fc332836d84c0 Mon Sep 17 00:00:00 2001
From: Carlos Garnacho <carlosg@gnome.org>
Date: Tue, 12 Feb 2013 14:04:09 +0100
Subject: [PATCH 34/36] cellrendererpixbuf: Use scaled icons on windows with a
 scale factor

---
 gtk/gtkcellrendererpixbuf.c |   31 ++++++++++++++++++++-----------
 1 file changed, 20 insertions(+), 11 deletions(-)

diff --git a/gtk/gtkcellrendererpixbuf.c b/gtk/gtkcellrendererpixbuf.c
index f689784..2985410 100644
--- a/gtk/gtkcellrendererpixbuf.c
+++ b/gtk/gtkcellrendererpixbuf.c
@@ -78,6 +78,7 @@ struct _GtkCellRendererPixbufPrivate
   gboolean follow_state;
   gchar *icon_name;
   GIcon *gicon;
+  gdouble render_scale;
 };
 
 G_DEFINE_TYPE (GtkCellRendererPixbuf, gtk_cell_renderer_pixbuf, GTK_TYPE_CELL_RENDERER)
@@ -300,6 +301,7 @@ gtk_cell_renderer_pixbuf_set_property (GObject      *object,
       if (cellpixbuf->pixbuf)
 	g_object_unref (cellpixbuf->pixbuf);
       cellpixbuf->pixbuf = (GdkPixbuf*) g_value_dup_object (value);
+      priv->render_scale = 1;
       if (cellpixbuf->pixbuf)
         {
           if (priv->stock_id)
@@ -422,6 +424,7 @@ gtk_cell_renderer_pixbuf_set_property (GObject      *object,
 	  g_object_unref (priv->gicon);
 	}
       priv->gicon = (GIcon *) g_value_dup_object (value);
+      priv->render_scale = 1;
       if (priv->gicon)
         {
 	  if (cellpixbuf->pixbuf)
@@ -480,10 +483,11 @@ gtk_cell_renderer_pixbuf_create_stock_pixbuf (GtkCellRendererPixbuf *cellpixbuf,
   if (cellpixbuf->pixbuf)
     g_object_unref (cellpixbuf->pixbuf);
 
-  cellpixbuf->pixbuf = gtk_widget_render_icon (widget,
-                                               priv->stock_id,
-                                               priv->stock_size,
-                                               priv->stock_detail);
+  cellpixbuf->pixbuf = gtk_widget_render_icon_scaled (widget,
+                                                      priv->stock_id,
+                                                      priv->stock_size,
+                                                      priv->stock_detail,
+                                                      &priv->render_scale);
 
   g_object_notify (G_OBJECT (cellpixbuf), "pixbuf");
 }
@@ -510,9 +514,10 @@ gtk_cell_renderer_pixbuf_create_themed_pixbuf (GtkCellRendererPixbuf *cellpixbuf
   icon_theme = gtk_icon_theme_get_for_screen (screen);
   settings = gtk_settings_get_for_screen (screen);
 
-  if (!gtk_icon_size_lookup_for_settings (settings,
-					  priv->stock_size,
-					  &width, &height))
+  if (!gtk_icon_size_lookup_scaled (settings,
+                                    priv->stock_size,
+                                    gdk_window_get_scale_factor (GTK_WIDGET (widget)->window),
+                                    &width, &height))
     {
       g_warning ("Invalid icon size %u\n", priv->stock_size);
       width = height = 24;
@@ -617,8 +622,8 @@ gtk_cell_renderer_pixbuf_get_size (GtkCellRenderer *cell,
   
   if (cellpixbuf->pixbuf)
     {
-      pixbuf_width  = gdk_pixbuf_get_width (cellpixbuf->pixbuf);
-      pixbuf_height = gdk_pixbuf_get_height (cellpixbuf->pixbuf);
+      pixbuf_width  = gdk_pixbuf_get_width (cellpixbuf->pixbuf) / priv->render_scale;
+      pixbuf_height = gdk_pixbuf_get_height (cellpixbuf->pixbuf) / priv->render_scale;
     }
   if (cellpixbuf->pixbuf_expander_open)
     {
@@ -761,10 +766,14 @@ gtk_cell_renderer_pixbuf_render (GtkCellRenderer      *cell,
       pixbuf = colorized;
     }
 
+  draw_rect.x -= pix_rect.x;
+  draw_rect.y -= pix_rect.y;
+
   cr = gdk_cairo_create (window);
-  
-  gdk_cairo_set_source_pixbuf (cr, pixbuf, pix_rect.x, pix_rect.y);
+  cairo_translate (cr, pix_rect.x, pix_rect.y);
   gdk_cairo_rectangle (cr, &draw_rect);
+  cairo_scale (cr, 1 / priv->render_scale, 1 / priv->render_scale);
+  gdk_cairo_set_source_pixbuf (cr, pixbuf, 0, 0);
   cairo_fill (cr);
 
   cairo_destroy (cr);
-- 
1.7.10.2 (Apple Git-33)

